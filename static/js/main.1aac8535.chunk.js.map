{"version":3,"sources":["reducers/books.js","actions/index.js","reducers/filter.js","reducers/index.js","components/Book.js","constants/constants.js","components/CategoryFilter.js","containers/BookList.js","containers/BookForm.js","components/Header.js","components/App.js","index.js"],"names":["initState","books","id","title","category","booksReducer","state","action","type","book","filter","changeFilter","filterName","combineReducers","Book","myId","this","props","value","myTitle","myCategory","clickHandler","handleRemoveBook","className","onClick","React","Component","Categories","categ","concat","CategoryFilter","handleFilterChange","filterProp","name","onChange","e","target","map","cat","key","BookList","arrBook","mybooks","filterBook","myFilter","selectFilter","elm","delItem","connect","dispatch","removeBook","f","BookForm","handleChange","setState","handleSubmit","preventDefault","addItem","reset","onSubmit","placeholder","required","a","Math","round","random","toString","createBook","Header","App","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aac8535.chunk.js","sourcesContent":["import {CREATE_BOOK, REMOVE_BOOK } from '../actions/index'\nconst initState = {\nbooks : [\n\t{\n\t\tid : '1',\n\t\ttitle : 'book1',\n\t    category: 'Sci-Fi'\n\t},\n\t{\n\t\tid : '2',\n\t\ttitle : 'book2',\n\t    category: 'Action'\n\t},\n\t]\n}\nconst booksReducer = (state = initState.books, action)  => {\n    switch (action.type) {\n    case CREATE_BOOK:\n        return [...state, action.book];\n       \n    case REMOVE_BOOK:\n        return state.filter(book => book.id !== action.id);\n    default:\n      return state\n  }\n}\nexport default booksReducer;"," export const REMOVE_BOOK = 'REMOVE_BOOK'\n export const CREATE_BOOK = 'CREATE_BOOK'\n export const CHANGE_FILTER = 'CHANGE_FILTER'\n\n\nconst generateId = () => Math.round(Math.random() * 1000).toString();\n\nexport const createBook = ({ title, category }) => ({\n  type: CREATE_BOOK,\n  book: {\n    id: generateId(),\n    title,\n    category\n  }\n});\n\nexport const removeBook = id => ({\n  type: REMOVE_BOOK,\n  id\n});\n\nexport const changeFilter = filterName => ({\n  type: CHANGE_FILTER,\n  filterName,\n});","import {CHANGE_FILTER} from '../actions/index'\n\nconst changeFilter = (state = 'All', action)  => {\n    switch (action.type) {\n    case CHANGE_FILTER:\n        return action.filterName;\n    default:\n      return state\n  }\n}\nexport default changeFilter;","import { combineReducers } from 'redux'\nimport booksReducer from './books' \nimport changeFilter from './filter'\n\nexport default combineReducers({\n    books: booksReducer,\n    filter: changeFilter\n})\n","import React from 'react';\nimport './App.css';\n\nclass Book extends React.Component {\n\n  render() {\n  \tlet myId = this.props.value.id;\n  \tlet myTitle= this.props.value.title;\n    let myCategory= this.props.value.category;\n    let clickHandler = this.props.handleRemoveBook;\n    return ( \n            <tr className = \"row-Panel\">\n              <td>{myId}</td>  \n              <td>{myTitle}</td>\n              <td>{myCategory}</td>\n              <td><div className = 'progress'><p>60%</p></div></td>\n              <td><button onClick={() => clickHandler(myId)} className = 'btn btn-primary'>DELETE</button></td>\n            </tr>           \t\n            \n    );\n  }\n}\n\n\nexport default Book;\n","export const Categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi']â€©\n","import React from 'react';\nimport {Categories} from '../constants/constants';\nimport './App.css';\n\nlet categ = ['All'].concat(Categories);\n\n\nclass CategoryFilter extends React.Component {\n\trender() {\n\t\tlet handleFilterChange = this.props.filterProp;\n      return (\n\t\t\t<div className = 'categFilter'>\n\t\t\t   <select name='categFilter' onChange = {(e) => handleFilterChange(e.target.value)}>\n                    { categ.map((cat) => (<option  value={cat} key={cat} > {cat} </option>)) }\n                </select>\n\t\t\t</div>\n\t    )\n\t}\n}\n\n\n\t\t\n\nexport default CategoryFilter;","import React from 'react';\nimport Book from '../components/Book';\nimport { connect } from 'react-redux';\nimport {removeBook, changeFilter} from '../actions/index';\nimport CategoryFilter from '../components/CategoryFilter'\nimport '../components/App.css';\n\nclass BookList extends React.Component {\n\t\n  render (){\n    let arrBook  = this.props.mybooks;\n    let filterBook = this.props.myFilter;\n    if (filterBook !== 'All'){\n    \tarrBook = arrBook.filter(book => book.category === filterBook)\n    }\n    return (\n    \t<div>\n    \t    <CategoryFilter filterProp = {this.props.selectFilter} />\n\t    \t<table>\n\t    \t       <tbody>\n\t    \t       {\n\t    \t       \tarrBook.map((elm) => {\n\t    \t       \t return (<Book key = {elm.id} value = {elm} \n\t    \t       \t \t      handleRemoveBook = {this.props.delItem} />)\n\t    \t       })}\n\t             </tbody>\n\t    \t</table>\n    \t</div>   );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n  \tmybooks: state.books,\n  \tmyFilter : state.filter\n  }\t\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delItem: (id) => {\n      dispatch(removeBook(id))\n    },\n    selectFilter: (f) => {\n    \tdispatch(changeFilter(f))\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList)","import React from 'react';\nimport { connect } from 'react-redux';\nimport {createBook} from '../actions/index';\nimport {Categories} from '../constants/constants';\nimport '../components/App.css';\n\n\n\nclass BookForm extends React.Component {\n\tstate = {\n\t\ttitle : '',\n\t\tcategory : Categories[0],\n\t}\n\thandleChange = (e) => {\n      this.setState({\n         [e.target.name]: e.target.value\n      });\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst { title, category } = this.state;\n\t\tthis.props.addItem({ title, category });\n\t\te.target.reset()\n\t\tthis.setState({\n                title: '',\n                category : Categories[0],\n\n        })  \n\t}\n\trender(){\n\t\treturn (\n            <div className = 'formBook'>\n              <p>ADD NEW BOOK</p>\n              <form onSubmit={this.handleSubmit}>\n                  \n                  <input type = 'text' name='title'  placeholder=\"Enter the Book name\" \n                  value = {this.state.title} required onChange={this.handleChange} />\n                  <select name='category' onChange={this.handleChange}>\n                    { Categories.map((cat) => (<option  value={cat} key={cat} > {cat} </option>)) }\n                  </select>\n                  <button className = 'btn btn-primary'>ADD BOOK</button>\n              </form>\n            </div>\n            \n\t\t\t);\n\t}\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books\n  };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItem: (a) => {\n      dispatch(createBook(a))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookForm);","import React from 'react';\nimport './App.css';\n\nconst Header = () => {\n  return (\n    <div className='headerBookStore'>\n      <div className='title'>Bookstore CMS</div>\n      <div className='books'>Books</div>\n      <div className='Category'>Categories</div>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport BookList from '../containers/BookList';\nimport BookForm from '../containers/BookForm';\nimport Header from './Header'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='panel-bg'>\n      <Header />\n      <BookList />\n      <BookForm />     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reducer from './reducers/index'\nimport './index.css';\nimport App from './components/App';\nimport { createStore} from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n\t<Provider store = {store} >\n       <App />\n    </Provider>, \n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}